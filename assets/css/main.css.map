{"version":3,"sources":["base/_reset.scss","base/_base.scss","base/_colours.scss","base/_typography.scss","main.css","components/_navigation.scss","layout/_container.scss","../../node_modules/jeet/scss/_grid.scss","layout/_header.scss","modules/_breaking.scss","../../node_modules/jeet/scss/_functions.scss","base/_media-queries.scss"],"names":[],"mappings":"AAAA;;;EAGE;AAEF;;;;;;;;;;;;;EAaC,UAAS;EACT,WAAU;EACV,UAAS;EACT,gBAAe;EACf,cAAa;EACb,yBAAwB;CACxB;;AACD,iDAAiD;AACjD;;EAEC,eAAc;CACd;;AACD;EACC,eAAc;CACd;;AACD;EACC,iBAAgB;CAChB;;AACD;EACC,aAAY;CACZ;;AACD;;EAEC,YAAW;EACX,cAAa;CACb;;AACD;EACC,0BAAyB;EACzB,kBAAiB;CACjB;;AC3CD;EACE,gBAAe;EACf,kBAAiB;EACjB,eCHqB;CDQtB;;AARD;EAMI,eAAsC;CACvC;;AAMD;EACE,mBAAkB;EAClB,eCdgB;EDehB,iBAAgB;CAKjB;;AARD;EAMI,eAAsC;CACvC;;AAGH;EACE,YC1Ba;ED2Bb,gBAAe;CAChB;;AExBD;EACE,uBAWwB;EAVxB,yCAA8C;EAC9C,4OAGuD;CCuE1D;;ADjDD;EACE,YD3BU;EC4BV,wDAXmD;EAYnD,iBAAgB;CACjB;;AAED;EACE,gBAAe;EACf,iBAAgB;CACjB;;AAED;EACE,gBAAe;CAChB;;AAED;EACE,gBAAe;CAChB;;AAED;EACE,sBAAqB;CACtB;;AEvDD;EACE,gBAAe;EACf,aAAY;EACZ,YAAW;EACX,iBAAgB;EAChB,8BHHe;EGIf,oBHLe;CGMhB;;ACPD;ECuKE,YAAW;EACX,kBDvKsB;ECwKtB,YAAW;EACX,eAAc;EAEZ,mBAAW;EACX,kBAAW;EAGX,mBD/K0B;ECgL1B,oBDhL0B;CAC7B;;AC+QC;EACE,YAAW;EACX,eAAc;EACd,YAAW;CACZ;;ACrRH;EACE,gBAAe;EACf,aAAY;EACZ,YAAW;EACX,iBNIU;CMHX;;AAED;EACE,mBAAkB;CACnB;;ACTD;EACE,2BPEW;COeZ;;AAfC;EACE,mBAAkB;EAClB,kBAAiB;CAYlB;;AAdD;EAKI,YAAW;EACX,mBAAkB;EAClB,QAAO;EACP,OAAM;EACN,YAAW;EACX,aAAY;EACZ,eAAc;EACd,uBPPM;COQP;;AAIL;EACE,eAAc;CAaf;;AAXC;EACE,gBAAe;CAShB;;AAVD;EAII,YPnBM;COwBP;;AATH;EAOM,YAA2B;CAC5B;;AAKP;EFmIE,YAAW;EACX,kBEnIsB;EFoItB,YAAW;EACX,eAAc;EAEZ,mBAAW;EACX,kBAAW;EAGX,kBE3IyB;EF4IzB,mBE5IyB;CAa5B;;AF+NC;EACE,YAAW;EACX,eAAc;EACd,YAAW;CACZ;;AEjPH;EFdE,YGAuE;EHCvE,YAAW;EACX,oBAAmB;EACnB,cAAkC;EAEhC,gBAAwB;EACxB,iBAAiC;CEqBlC;;AAbH;EF8OI,YAAW;EACX,eAAc;EACd,YAAW;CACZ;;AEjPH;EFYM,iBAA8D;CAC/D;;AIvBD;EFUJ;IFdE,YGAuE;IHCvE,YAAW;IACX,oBAAmB;IACnB,aAAkC;IAEhC,gBAAwB;IACxB,iBAAiC;GEqBlC;EAbH;IF8OI,YAAW;IACX,eAAc;IACd,YAAW;GACZ;EEjPH;IFHM,iBAA2D;IAC3D,YGZmE;IHanE,YAAW;GACZ;EEAL;IFGM,iBAA8D;IAC9D,aGiCW;GHhCZ;EELL;IFQM,YAAW;GACZ;CHsMJ;;AOzNG;EFUJ;IF+JE,eAAc;IACd,YAAW;IACX,YAAW;IACX,YAAW;IAET,kBAAW;IACX,mBAAW;GExJZ;EAbH;IFyKI,kBAA4B;GAC7B;EE1KH;IF6KI,mBAAqC;GACtC;CHkDF;;AKjND;;iFAEiF","file":"main.css","sourcesContent":["/* http://meyerweb.com/eric/tools/css/reset/\r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n","// General global styles.\r\n\r\n\r\n// Anchor links.\r\n.heading-link {\r\n  font-size: 12px;\r\n  margin-left: 10px;\r\n  color: $color-ui-link-01;\r\n\r\n  &:hover {\r\n    color: lighten($color-ui-link-01, 10%);\r\n  }\r\n}\r\n\r\n\r\n// Article category and time\r\n.article {\r\n  &__category {\r\n    margin-right: 10px;\r\n    color: $color-ui-link-02;\r\n    font-weight: 600;\r\n\r\n    &:hover {\r\n      color: lighten($color-ui-link-02, 15%);\r\n    }\r\n  }\r\n\r\n  &__time {\r\n    color: $color-ui-dark-01;\r\n    font-size: 12px;\r\n  }\r\n}\r\n","// 1.0 Colour palette.\r\n$mercury: #e6e6e6;\r\n$dusty-grey: #999;\r\n$silver: #ccc;\r\n$sunset-orange: #ff5443;\r\n$steel-blue: #4591b8;\r\n\r\n$white: #fff;\r\n$black: #000;\r\n\r\n// 2.0 Colours currently being used on the site.\r\n$color-primary: $white;\r\n\r\n$color-ui-light-01: $mercury;\r\n$color-ui-light-02: $silver;\r\n\r\n$color-ui-dark-01: $dusty-grey;\r\n\r\n$color-ui-link-01: $sunset-orange;\r\n$color-ui-link-02: $steel-blue;\r\n","// 1.0 Font asset path.\r\n$path-font: '../fonts';\r\n\r\n// 1.1 Web font mixin.\r\n// Mixin that accepts the name of the font family and the name of the font file.\r\n@mixin font-face($family, $file) {\r\n  @font-face {\r\n    font-family: $family;\r\n    src: url('#{$path-font}/#{$file}-webfont.eot');\r\n    src: url('#{$path-font}/#{$file}-webfont.eot?#iefix') format('embedded-opentype'),\r\n    url('#{$path-font}/#{$file}-webfont.woff') format('woff'),\r\n    url('#{$path-font}/#{$file}-webfont.ttf') format('truetype'),\r\n    url('#{$path-font}/#{$file}-webfont.svg') format('svg');\r\n  }\r\n}\r\n\r\n// 1.2 Include fonts.\r\n// Use the mixin we created at '1.0' to add in the name of the font family and the name of the file.\r\n@include font-face('Georgia', Georgia);\r\n\r\n// 1.3 Font fallbacks.\r\n// Font fallbacks in case something unfortunate happens to the fonts used primarily\r\n// on the site. If fallbacks keep failing, the next font listed is\r\n// checked with basic sans/sans-serif as the final fallback.\r\n$font-sans-serif-fallback: Arial, Helvetica, sans-serif;\r\n$font-serif-fallback: \"Times New Roman\", Times, serif;\r\n\r\n// 1.4 Font families.\r\n// Store the fonts in a variable along with the fallback fonts.\r\n$font-georgia: 'Georgia', $font-serif-fallback;\r\n\r\n// 2.0 Element styles.\r\n\r\n\r\nbody {\r\n  color: $black;\r\n  font-family: $font-georgia;\r\n  line-height: 1.3;\r\n}\r\n\r\nh3 {\r\n  font-size: 26px;\r\n  font-weight: 700;\r\n}\r\n\r\nh4 {\r\n  font-size: 12px;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n","/* http://meyerweb.com/eric/tools/css/reset/\r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\n\nbody {\n  line-height: 1;\n}\n\nol, ul {\n  list-style: none;\n}\n\nblockquote, q {\n  quotes: none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n.heading-link {\n  font-size: 12px;\n  margin-left: 10px;\n  color: #ff5443;\n}\n\n.heading-link:hover {\n  color: #ff8276;\n}\n\n.article__category {\n  margin-right: 10px;\n  color: #4591b8;\n  font-weight: 600;\n}\n\n.article__category:hover {\n  color: #7cb2ce;\n}\n\n.article__time {\n  color: #999;\n  font-size: 12px;\n}\n\n@font-face {\n  font-family: \"Georgia\";\n  src: url(\"../fonts/Georgia-webfont.eot\");\n  src: url(\"../fonts/Georgia-webfont.eot?#iefix\") format(\"embedded-opentype\"), url(\"../fonts/Georgia-webfont.woff\") format(\"woff\"), url(\"../fonts/Georgia-webfont.ttf\") format(\"truetype\"), url(\"../fonts/Georgia-webfont.svg\") format(\"svg\");\n}\n\nbody {\n  color: #000;\n  font-family: \"Georgia\", \"Times New Roman\", Times, serif;\n  line-height: 1.3;\n}\n\nh3 {\n  font-size: 26px;\n  font-weight: 700;\n}\n\nh4 {\n  font-size: 12px;\n}\n\np {\n  font-size: 14px;\n}\n\na {\n  text-decoration: none;\n}\n\n.nav__main {\n  position: fixed;\n  height: 50px;\n  width: 100%;\n  margin-top: 80px;\n  border-bottom: 1px solid #999;\n  background: #e6e6e6;\n}\n\n.container {\n  width: auto;\n  max-width: 1280px;\n  float: none;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 40px;\n  padding-right: 40px;\n}\n\n.container::after {\n  content: '';\n  display: table;\n  clear: both;\n}\n\n.header {\n  position: fixed;\n  height: 80px;\n  width: 100%;\n  background: #000;\n}\n\n.ad__banner {\n  padding-top: 200px;\n}\n\n.breaking {\n  border-top: 1px solid #ccc;\n}\n\n.breaking__header {\n  position: relative;\n  padding-top: 20px;\n}\n\n.breaking__header::after {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 8px;\n  width: 120px;\n  display: block;\n  background-color: #000;\n}\n\n.breaking__item {\n  margin: 10px 0;\n}\n\n.breaking__item__title {\n  margin-top: 5px;\n}\n\n.breaking__item__title a {\n  color: #000;\n}\n\n.breaking__item__title a:hover {\n  color: gray;\n}\n\n.breaking__list {\n  width: auto;\n  max-width: 1280px;\n  float: none;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 0px;\n  padding-right: 0px;\n}\n\n.breaking__list::after {\n  content: '';\n  display: table;\n  clear: both;\n}\n\n.breaking__list .breaking__item {\n  float: left;\n  clear: none;\n  text-align: inherit;\n  width: 22.75%;\n  margin-left: 0%;\n  margin-right: 3%;\n}\n\n.breaking__list .breaking__item::after {\n  content: '';\n  display: table;\n  clear: both;\n}\n\n.breaking__list .breaking__item:last-child {\n  margin-right: 0%;\n}\n\n@media only screen and (max-width: 767px) {\n  .breaking__list .breaking__item {\n    float: left;\n    clear: none;\n    text-align: inherit;\n    width: 48.5%;\n    margin-left: 0%;\n    margin-right: 3%;\n  }\n  .breaking__list .breaking__item::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n  .breaking__list .breaking__item:nth-child(n) {\n    margin-right: 3%;\n    float: left;\n    clear: none;\n  }\n  .breaking__list .breaking__item:nth-child(2n) {\n    margin-right: 0%;\n    float: right;\n  }\n  .breaking__list .breaking__item:nth-child(2n + 1) {\n    clear: both;\n  }\n}\n\n@media only screen and (max-width: 479px) {\n  .breaking__list .breaking__item {\n    display: block;\n    clear: both;\n    float: none;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .breaking__list .breaking__item:first-child {\n    margin-left: auto;\n  }\n  .breaking__list .breaking__item:last-child {\n    margin-right: auto;\n  }\n}\n\n/*  ==========================================================================\r\n\t1. Column Layout\r\n    ========================================================================== */\n",".nav__main {\r\n  position: fixed;\r\n  height: 50px;\r\n  width: 100%;\r\n  margin-top: 80px;\r\n  border-bottom: 1px solid $color-ui-dark-01;\r\n  background: $color-ui-light-01;\r\n}\r\n",".container {\r\n  @include center(1280px, 40px);\r\n}\r\n","@mixin column($ratios: 1, $offset: 0, $cycle: 0, $gutter: map-get($jeet, 'gutter')) {\n  $side: _get-layout-direction();\n  $opposite-side: _opposite-direction($side);\n  $column-widths: _get-column($ratios, $gutter);\n  $margin-last: 0;\n  $margin-l: $margin-last;\n  $margin-r: nth($column-widths, 2);\n\n  @if $offset != 0 {\n    @if $offset < 0 {\n      $offset: $offset * -1;\n      $offset: nth(_get-column($offset, nth($column-widths, 2)), 1);\n      $margin-last: $offset + nth($column-widths, 2) * 2;\n      $margin-r: $margin-last;\n    } @else {\n      $offset: nth(_get-column($offset, nth($column-widths, 2)), 1);\n      $margin-l: $offset + nth($column-widths, 2);\n    }\n  }\n\n  @include clearfix;\n\n  float: $side;\n  clear: none;\n  text-align: inherit;\n  width: nth($column-widths, 1) * 1%;\n  margin: {\n    #{$side}: $margin-l * 1%;\n    #{$opposite-side}: $margin-r * 1%;\n  };\n\n  @if $cycle != 0 {\n    &:nth-child(n) {\n      margin-#{_opposite-direction($side)}: $margin-r * 1%;\n      float: $side;\n      clear: none;\n    }\n\n    &:nth-child(#{$cycle}n) {\n      margin-#{_opposite-direction($side)}: $margin-last * 1%;\n      float: _opposite-direction($side);\n    }\n\n    &:nth-child(#{$cycle}n + 1) {\n      clear: both;\n    }\n  } @else {\n    &:last-child {\n      margin-#{_opposite-direction($side)}: $margin-last * 1%;\n    }\n  }\n}\n\n\n@function column-width($ratios: 1, $gutter: map-get($jeet, 'gutter')) {\n  @if (map-get($jeet, 'parent-first') != 'true') {\n    $ratios: _reverse($ratios);\n  }\n\n  $w: 100;\n\n  @each $ratio in $ratios {\n    $w: 100 * $ratio - $gutter + $ratio * $gutter;\n  }\n\n  @return unquote($w + '%');\n}\n\n\n@function column-gutter($ratios: 1, $gutter: map-get($jeet, 'gutter')) {\n  @if (map-get($jeet, 'parent-first') != 'true') {\n    $ratios: _reverse($ratios);\n  }\n\n  $w: 100;\n\n  @each $ratio in $ratios {\n    $gutter: $gutter / $w * 100;\n  }\n\n  @return unquote($gutter + '%');\n}\n\n\n@mixin span($ratio: 1, $offset: 0, $cycle: 0) {\n  $side: _get-layout-direction();\n  $opposite-side: _opposite-direction($side);\n  $span-width: _get-span($ratio);\n  $margin-r: 0;\n  $margin-l: $margin-r;\n  @if $offset != 0 {\n    @if $offset < 0 {\n      $offset: $offset * -1;\n      $margin-r: _get-span($offset);\n    } @else {\n      $margin-l: _get-span($offset);\n    }\n  }\n\n  @include clearfix;\n  float: $side;\n  clear: none;\n  text-align: inherit;\n  width: $span-width * 1%;\n  margin: {\n    #{$side}: $margin-l * 1%;\n    #{$opposite-side}: $margin-r * 1%;\n  };\n\n  @if $cycle != 0 {\n    &:nth-child(n) {\n      float: $side;\n      clear: none;\n    }\n\n    &:nth-child(#{$cycle}n) {\n      float: _opposite-direction($side);\n    }\n\n    &:nth-child(#{$cycle}n + 1) {\n      clear: both;\n    }\n  }\n}\n\n\n@mixin move($ratios: 0, $col-or-span: column, $gutter: map-get($jeet, 'gutter')) {\n  $translate: '';\n  $side: _get-layout-direction();\n\n  @if $side == right {\n    $ratios: _replace-nth($ratios, 0, nth($ratios, 1) * -1);\n  }\n\n  @if index(\"column\" \"col\" \"c\", $col-or-span) {\n    $column-widths: _get-column($ratios, $gutter);\n    $translate: nth($column-widths, 1) + nth($column-widths, 2);\n  } @else {\n    $translate: _get-span($ratios);\n  }\n\n  position: relative;\n  left: $translate * 1%;\n}\n\n\n@mixin unmove() {\n  position: static;\n  left: 0;\n}\n\n\n@mixin debug($color: blue, $important: false) {\n  @if $important {\n    * {\n      background: rgba($color, .05) !important;\n    }\n  } @else {\n    * {\n      background: rgba($color, .05);\n    }\n  }\n}\n\n\n@mixin center($max-width: map-get($jeet, 'max-width'), $pad: 0) {\n  @include clearfix;\n  width: auto;\n  max-width: $max-width;\n  float: none;\n  display: block;\n  margin: {\n    right: auto;\n    left:  auto;\n  };\n  padding: {\n    left:  $pad;\n    right: $pad;\n  };\n}\n\n\n@mixin uncenter() {\n  max-width: none;\n  margin-right: 0;\n  margin-left: 0;\n  padding-left: 0;\n  padding-right: 0;\n}\n\n\n@mixin stack($pad: 0, $align: false) {\n  $side: _get-layout-direction();\n  $opposite-side: _opposite-direction($side);\n\n  display: block;\n  clear: both;\n  float: none;\n  width: 100%;\n  margin: {\n    left:  auto;\n    right: auto;\n  };\n\n  &:first-child {\n    margin-#{$side}: auto;\n  }\n\n  &:last-child {\n    margin-#{$opposite-side}: auto;\n  }\n\n  @if $pad != 0 {\n    padding: {\n      left:  $pad;\n      right: $pad;\n    }\n  }\n\n  @if ($align is not false) {\n    @if index(\"center\" \"c\", $align) {\n      text-align: center;\n    } @else if index(\"left\" \"l\", $align) {\n      text-align: left;\n    } @else if index(\"right\" \"r\", $align) {\n      text-align: right;\n    }\n  }\n}\n\n\n@mixin unstack() {\n  $side: _get-layout-direction();\n  $opposite-side: _opposite-direction($side);\n\n  text-align: $side;\n  display: inline;\n  clear: none;\n  width: auto;\n  margin: {\n    left:  0;\n    right: 0;\n  };\n\n  &:first-child {\n    margin-#{$side}: 0;\n  }\n\n  &:last-child {\n    margin-#{_opposite-direction($side)}: 0;\n  }\n}\n\n\n@mixin align($direction: both) {\n  position: absolute;\n  transform-style: preserve-3d;\n\n  @if index(\"horizontal\" \"h\", $direction) {\n    left: 50%;\n    transform: translateX(-50%);\n  } @else if index(\"vertical\" \"v\", $direction) {\n    top: 50%;\n    transform: translateY(-50%);\n  } @else {\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n\n\n@mixin clearfix() {\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n",".header {\r\n  position: fixed;\r\n  height: 80px;\r\n  width: 100%;\r\n  background: $black;\r\n}\r\n\r\n.ad__banner {\r\n  padding-top: 200px;\r\n}\r\n",".breaking {\r\n  border-top: 1px solid $color-ui-light-02;\r\n\r\n  &__header {\r\n    position: relative;\r\n    padding-top: 20px;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      height: 8px;\r\n      width: 120px;\r\n      display: block;\r\n      background-color: $black;\r\n    }\r\n  }\r\n}\r\n\r\n.breaking__item {\r\n  margin: 10px 0;\r\n\r\n  &__title {\r\n    margin-top: 5px;\r\n\r\n    a {\r\n      color: $black;\r\n\r\n      &:hover {\r\n        color: lighten($black, 50%);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.breaking__list {\r\n  @include center(1280px, 0px);\r\n\r\n  .breaking__item {\r\n     @include column(1/4);\r\n\r\n    @include mq(\"tablet\", max) {\r\n      @include column(1/2, $cycle: 2);\r\n    }\r\n\r\n    @include mq(\"phone-wide\", max) {\r\n      @include stack();\r\n    }\r\n  }\r\n}\r\n/*  ==========================================================================\r\n\t1. Column Layout\r\n    ========================================================================== */\r\n","// List functions courtesy of Team Sass.\n\n// Get  percentage from a given ratio.\n@function _get-span($ratio: 1) {\n  @return $ratio * 100;\n}\n\n// Work out the column widths based on the ratio and gutter sizes.\n@function _get-column($ratios: 1, $gutter: map-get($jeet, 'gutter')) {\n  $ratios: if(not map-get($jeet, 'parent-first'), _reverse($ratios), $ratios);\n  $width: 100;\n\n  @each $ratio in $ratios {\n    $gutter: $gutter / $width * 100;\n    $width: 100 * $ratio - $gutter + $ratio * $gutter;\n  }\n\n  @return $width $gutter;\n}\n\n// Get the set layout direction for the project.\n@function _get-layout-direction() {\n  $direction: if(map-get($jeet, 'layout-direction') == 'RTL', right, left);\n\n  @return $direction;\n}\n\n// Replace a specified list value with a new value (uses built in set-nth() if available)\n@function _replace-nth($list, $index, $value) {\n  // Fallback for Sass 3.2\n  @if function-exists('set-nth') != true {\n    $result: ();\n    $index: if($index < 0, length($list) + $index + 1, $index);\n\n    @for $i from 1 through length($list) {\n      $result: append($result, if($i == $index, $value, nth($list, $i)));\n    }\n\n    @return $result;\n  }\n\n  // Sass 3.3\n  $result: set-nth($list, $index, $value);\n\n  @return $result;\n}\n\n// Reverse a list (progressively enhanced for Sass 3.3)\n@function _reverse($list) {\n  // Sass 3.2\n  @if function-exists('set-nth') != true {\n    $result: ();\n\n    @for $i from length($list) * -1 through -1 {\n      $result: append($result, nth($list, abs($i)));\n    }\n\n    @return $result;\n  }\n\n  // Sass 3.3\n  @for $i from 1 through floor(length($list) / 2) + 1 {\n    $tmp: nth($list, $i);\n    $list: set-nth($list, $i, nth($list, -$i));\n    $list: set-nth($list, -$i, $tmp);\n  }\n\n  @return $list;\n}\n\n// Get the opposite direction to a given value.\n@function _opposite-direction($direction) {\n  @if $direction == 'left' {\n    @return right;\n  } @else if $direction == 'right' {\n    @return left;\n  } @else if $direction == 'top' {\n    @return bottom;\n  } @else if $direction == 'bottom' {\n    @return top;\n  } @else if index('ltr' 'LTR', $direction) {\n    @return rtl;\n  } @else if index('rtl' 'RTL', $direction) {\n    @return ltr;\n  } @else {\n    @warn '`#{$direction}` is not a direction; please make sure your direction is all lowercase.';\n    @return false;\n  }\n}\n","// To use media query mixin, use the following code nested in the element\r\n// you wish to alter on different screen sizes:\r\n//\r\n// @include mq('$breakspoint') {\r\n//    css: properties;\r\n//  }\r\n//\r\n// where $breakpoint is the name of the pixel width you wish to use (IE 'tablet')\r\n\r\n$breakpoints: (\r\n  \"phone\":        400px,\r\n  \"phone-wide\":   480px,\r\n  \"phablet\":      560px,\r\n  \"tablet-small\": 640px,\r\n  \"tablet\":       768px,\r\n  \"tablet-wide\":  1024px,\r\n  \"desktop\":      1248px,\r\n  \"desktop-wide\": 1440px\r\n);\r\n\r\n@mixin mq($width, $type: min) {\r\n  @if map_has_key($breakpoints, $width) {\r\n    $width: map_get($breakpoints, $width);\r\n    @if $type == max {\r\n      $width: $width - 1px;\r\n    }\r\n    @media only screen and (#{$type}-width: $width) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n"]}